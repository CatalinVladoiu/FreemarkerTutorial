<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:cloud="http://schema.cloudfoundry.org/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring-0.8.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:property-placeholder location="classpath*:*.properties" />

	<!-- Scans within the base package of the application for components to 
		configure as beans -->
	<context:component-scan base-package="org.freemarker.core, org.freemarker.web" />

	<!-- Resolves localized messages*.properties in the application to allow 
		for internationalization. -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="defaultEncoding" value="utf-8" />
		<property name="basename" value="/WEB-INF/i18n/messages" />
		<property name="fallbackToSystemLocale" value="false" />
	</bean>

	<!-- Enables proper handling of multipart post requests such as file uploads -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10000000" />
	</bean>

	<!-- Persistence infrastructure -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="dataSource" class="${jdbc.datasource}">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- Drives transactions using local JPA APIs -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="org.freemarker.core.model" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="databasePlatform" value="${hibernate.dialect}" />
				<property name="showSql" value="${hibernate.show_sql}" />
				<property name="generateDdl" value="true" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop>
			</props>
		</property>
	</bean>

	<!-- Persistence processors -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- Load properties files -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath*:*.properties" />
	</bean>

	<!-- Enable rendering of JSON back to client !! test -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="text/xml" />
				<entry key="htm" value="text/html" />
			</map>
		</property>
		<property name="favorParameter" value="true" />
		<property name="favorPathExtension" value="false" />
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="application/json" />
	</bean>

</beans>
