<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Declares explicit support for annotation-driven MVC controllers (i.e. @RequestMapping, @Controller, although support for those is the default behaviour), 
		as well as adding support for declarative validation via @Valid and message body marshalling with @RequestBody/ResponseBody. -->
<!-- 	<annotation-driven /> -->

	<!-- Scans within the base package of the application web package components to configure as beans -->
	<context:component-scan base-package="org.freemarker.web"/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources location="WEB-INF/resources/, classpath:/META-INF/resources/" mapping="/resources/**" cache-period="#{1 * 1}" />

	<!-- Register "global" interceptor beans to apply to all registered HandlerMappings -->
	<!-- <interceptors>
		<beans:bean	class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" />
		<beans:bean	class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" p:paramName="lang" />
	</interceptors> -->

	<beans:bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<beans:property name="templateLoaderPath" value="/WEB-INF/" />
	</beans:bean>

	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<beans:property name="cache" value="true" />
		<beans:property name="prefix" value="" />
		<beans:property name="suffix" value=".ftl" />
	</beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to url based iles resources -->
	<!--
	 <beans:bean id="tilesviewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="0">
		<beans:property name="viewClass">
			<beans:value>org.springframework.web.servlet.view.tiles2.TilesView </beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/tiles-defs.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean> 
	-->

	<!-- Store preferred language configuration in a cookie -->
	<!-- <beans:bean id="localeResolver"	class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<beans:property name="cookieName" value="locale" />
		<beans:property name="cookieMaxAge" value="30" />
		<beans:property name="defaultLocale" value="en" />
	</beans:bean> -->

	<!-- Resolves localized <theme_name>.properties files in the classpath to allow for theme support -->
	<!-- 	<beans:bean id="themeSource" class="org.springframework.ui.context.support.ResourceBundleThemeSource" /> -->

	<!-- This bean resolves specific types of exceptions to corresponding logical 
		- view names for error views. The default behaviour of DispatcherServlet 
		- is to propagate all exceptions to the servlet container: this will happen 
		- here with all other types of exceptions. -->
	<beans:bean	class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver"	p:order="1" />
</beans:beans>